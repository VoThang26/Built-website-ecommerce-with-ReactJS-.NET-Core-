// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using vohoangthang.Exercise02.Context;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(Exercise02Context))]
    [Migration("20240402114955_CreateExercise02DB")]
    partial class CreateExercise02DB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Attribute", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("attribute_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("created_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK_ATTRI_ID");

                    b.HasIndex("created_by");

                    b.HasIndex("updated_by");

                    b.ToTable("attributes", (string)null);
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Attribute_Value", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("attribute_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("attribute_value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("color")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id")
                        .HasName("PK_ATRV_ID");

                    b.HasIndex("attribute_id");

                    b.ToTable("attribute_values", (string)null);
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Card", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("customer_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK_CARD_ID");

                    b.HasIndex("customer_id");

                    b.ToTable("cards", (string)null);
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Card_Item", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("card_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("product_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("id")
                        .HasName("PK_CARD_ITEM_ID");

                    b.HasIndex("card_id");

                    b.HasIndex("product_id");

                    b.ToTable("card_items", (string)null);
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Category", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<string>("category_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("category_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("parent_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("placeholder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updated_at")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<Guid>("updated_by")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK_CATE_ID");

                    b.HasIndex("created_by");

                    b.HasIndex("parent_id");

                    b.HasIndex("updated_by");

                    b.ToTable("categories", (string)null);

                    b.HasData(
                        new
                        {
                            id = new Guid("5d0831e0-353e-4c55-b027-24d88e7aa075"),
                            active = true,
                            category_description = "clothes",
                            category_name = "Clothes",
                            created_at = new DateTime(2024, 4, 2, 11, 49, 55, 142, DateTimeKind.Utc).AddTicks(1509),
                            created_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da"),
                            icon = "dress.svg",
                            image = "clothes.png",
                            updated_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da")
                        },
                        new
                        {
                            id = new Guid("a07d5948-0875-45e4-8942-be2c044807f5"),
                            active = true,
                            category_description = "Footwear",
                            category_name = "Footwear",
                            created_at = new DateTime(2024, 4, 2, 11, 49, 55, 142, DateTimeKind.Utc).AddTicks(1512),
                            created_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da"),
                            icon = "shoes.svg",
                            image = "clothes.png",
                            updated_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da")
                        },
                        new
                        {
                            id = new Guid("77c61abd-a3c2-494c-ac11-3cd115aa8847"),
                            active = true,
                            category_description = "Jewelry",
                            category_name = "Jewelry",
                            created_at = new DateTime(2024, 4, 2, 11, 49, 55, 142, DateTimeKind.Utc).AddTicks(1515),
                            created_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da"),
                            icon = "jewelry.svg",
                            image = "clothes.png",
                            updated_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da")
                        },
                        new
                        {
                            id = new Guid("794a3fe4-b9be-4ca2-ad9f-70def002a76f"),
                            active = true,
                            category_description = "Perfume",
                            category_name = "Perfume",
                            created_at = new DateTime(2024, 4, 2, 11, 49, 55, 142, DateTimeKind.Utc).AddTicks(1517),
                            created_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da"),
                            icon = "perfume.svg",
                            image = "clothes.png",
                            updated_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da")
                        },
                        new
                        {
                            id = new Guid("b7fcb73a-a8bd-45f3-9b12-18973f90d204"),
                            active = true,
                            category_description = "Cosmetics",
                            category_name = "Cosmetics",
                            created_at = new DateTime(2024, 4, 2, 11, 49, 55, 142, DateTimeKind.Utc).AddTicks(1520),
                            created_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da"),
                            icon = "cosmetics.svg",
                            image = "clothes.png",
                            updated_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da")
                        },
                        new
                        {
                            id = new Guid("f2736214-4f06-46a3-b341-f23040aa4f02"),
                            active = true,
                            category_description = "Glasses",
                            category_name = "Glasses",
                            created_at = new DateTime(2024, 4, 2, 11, 49, 55, 142, DateTimeKind.Utc).AddTicks(1522),
                            created_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da"),
                            icon = "glasses.svg",
                            image = "clothes.png",
                            updated_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da")
                        },
                        new
                        {
                            id = new Guid("113aa073-f172-496d-8af2-616a029b9710"),
                            active = true,
                            category_description = "Bags",
                            category_name = "Bags",
                            created_at = new DateTime(2024, 4, 2, 11, 49, 55, 142, DateTimeKind.Utc).AddTicks(1524),
                            created_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da"),
                            icon = "bag.svg",
                            image = "clothes.png",
                            updated_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da")
                        },
                        new
                        {
                            id = new Guid("7fc68b97-b12a-402c-9bc3-d471b9871aa8"),
                            active = true,
                            category_description = "Shirt",
                            category_name = "Shirt",
                            created_at = new DateTime(2024, 4, 2, 11, 49, 55, 142, DateTimeKind.Utc).AddTicks(1572),
                            created_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da"),
                            parent_id = new Guid("5d0831e0-353e-4c55-b027-24d88e7aa075"),
                            updated_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da")
                        },
                        new
                        {
                            id = new Guid("d0ab38f5-2de0-4e2e-9f9b-2eb0b33c9c4b"),
                            active = true,
                            category_description = "Shorts & Jeans",
                            category_name = "Shorts & Jeans",
                            created_at = new DateTime(2024, 4, 2, 11, 49, 55, 142, DateTimeKind.Utc).AddTicks(1576),
                            created_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da"),
                            parent_id = new Guid("5d0831e0-353e-4c55-b027-24d88e7aa075"),
                            updated_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da")
                        },
                        new
                        {
                            id = new Guid("42cc41e9-6626-4f82-b9eb-396916c1de5c"),
                            active = true,
                            category_description = "Jacket",
                            category_name = "Jacket",
                            created_at = new DateTime(2024, 4, 2, 11, 49, 55, 142, DateTimeKind.Utc).AddTicks(1578),
                            created_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da"),
                            parent_id = new Guid("5d0831e0-353e-4c55-b027-24d88e7aa075"),
                            updated_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da")
                        },
                        new
                        {
                            id = new Guid("7d13612f-287b-43b3-ac11-67955fabde07"),
                            active = true,
                            category_description = "Dress & Frock",
                            category_name = "Dress & Frock",
                            created_at = new DateTime(2024, 4, 2, 11, 49, 55, 142, DateTimeKind.Utc).AddTicks(1581),
                            created_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da"),
                            parent_id = new Guid("5d0831e0-353e-4c55-b027-24d88e7aa075"),
                            updated_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da")
                        },
                        new
                        {
                            id = new Guid("7fc37468-846c-4a3d-884f-59d6f936569e"),
                            active = true,
                            category_description = "Sports",
                            category_name = "Sports",
                            created_at = new DateTime(2024, 4, 2, 11, 49, 55, 142, DateTimeKind.Utc).AddTicks(1583),
                            created_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da"),
                            parent_id = new Guid("a07d5948-0875-45e4-8942-be2c044807f5"),
                            updated_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da")
                        },
                        new
                        {
                            id = new Guid("38235bf2-757d-4b23-8dd6-9734557e3984"),
                            active = true,
                            category_description = "Formal",
                            category_name = "Formal",
                            created_at = new DateTime(2024, 4, 2, 11, 49, 55, 142, DateTimeKind.Utc).AddTicks(1597),
                            created_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da"),
                            parent_id = new Guid("a07d5948-0875-45e4-8942-be2c044807f5"),
                            updated_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da")
                        },
                        new
                        {
                            id = new Guid("7403a8bd-59cd-4500-aebe-ccb3b1b84a09"),
                            active = true,
                            category_description = "Casual",
                            category_name = "Casual",
                            created_at = new DateTime(2024, 4, 2, 11, 49, 55, 142, DateTimeKind.Utc).AddTicks(1631),
                            created_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da"),
                            parent_id = new Guid("a07d5948-0875-45e4-8942-be2c044807f5"),
                            updated_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da")
                        },
                        new
                        {
                            id = new Guid("1b45aaab-1721-4b42-9bf6-6c704c625d9a"),
                            active = true,
                            category_description = "Safety Shoe",
                            category_name = "Safety Shoe",
                            created_at = new DateTime(2024, 4, 2, 11, 49, 55, 142, DateTimeKind.Utc).AddTicks(1633),
                            created_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da"),
                            parent_id = new Guid("a07d5948-0875-45e4-8942-be2c044807f5"),
                            updated_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da")
                        },
                        new
                        {
                            id = new Guid("bd24c8a3-a61a-4561-a5ff-fc24b6357b87"),
                            active = true,
                            category_description = "Earrings",
                            category_name = "Earrings",
                            created_at = new DateTime(2024, 4, 2, 11, 49, 55, 142, DateTimeKind.Utc).AddTicks(1636),
                            created_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da"),
                            parent_id = new Guid("77c61abd-a3c2-494c-ac11-3cd115aa8847"),
                            updated_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da")
                        },
                        new
                        {
                            id = new Guid("97edb2dc-115f-4d74-b3e3-13b9be42422d"),
                            active = true,
                            category_description = "Couple Rings",
                            category_name = "Couple Rings",
                            created_at = new DateTime(2024, 4, 2, 11, 49, 55, 142, DateTimeKind.Utc).AddTicks(1639),
                            created_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da"),
                            parent_id = new Guid("77c61abd-a3c2-494c-ac11-3cd115aa8847"),
                            updated_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da")
                        },
                        new
                        {
                            id = new Guid("59872104-dc65-4061-b8ea-0e8da03e025a"),
                            active = true,
                            category_description = "Necklace",
                            category_name = "Necklace",
                            created_at = new DateTime(2024, 4, 2, 11, 49, 55, 142, DateTimeKind.Utc).AddTicks(1641),
                            created_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da"),
                            parent_id = new Guid("77c61abd-a3c2-494c-ac11-3cd115aa8847"),
                            updated_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da")
                        },
                        new
                        {
                            id = new Guid("bfdd6fdf-313e-48e6-ace4-502cfeaeb9a7"),
                            active = true,
                            category_description = "Clothes Perfume",
                            category_name = "Clothes Perfume",
                            created_at = new DateTime(2024, 4, 2, 11, 49, 55, 142, DateTimeKind.Utc).AddTicks(1644),
                            created_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da"),
                            parent_id = new Guid("794a3fe4-b9be-4ca2-ad9f-70def002a76f"),
                            updated_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da")
                        },
                        new
                        {
                            id = new Guid("d25f0967-8e54-4c6e-8a1d-9c3fbbcb2210"),
                            active = true,
                            category_description = "Deodaront",
                            category_name = "Deodaront",
                            created_at = new DateTime(2024, 4, 2, 11, 49, 55, 142, DateTimeKind.Utc).AddTicks(1647),
                            created_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da"),
                            parent_id = new Guid("794a3fe4-b9be-4ca2-ad9f-70def002a76f"),
                            updated_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da")
                        },
                        new
                        {
                            id = new Guid("202f2e2d-b5ac-4a22-9dde-8c6e9ec41e01"),
                            active = true,
                            category_description = "Shampoo",
                            category_name = "Shampoo",
                            created_at = new DateTime(2024, 4, 2, 11, 49, 55, 142, DateTimeKind.Utc).AddTicks(1651),
                            created_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da"),
                            parent_id = new Guid("b7fcb73a-a8bd-45f3-9b12-18973f90d204"),
                            updated_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da")
                        },
                        new
                        {
                            id = new Guid("a7fdee63-2ecb-4565-8848-6c9218a45972"),
                            active = true,
                            category_description = "Sunscreen",
                            category_name = "Sunscreen",
                            created_at = new DateTime(2024, 4, 2, 11, 49, 55, 142, DateTimeKind.Utc).AddTicks(1654),
                            created_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da"),
                            parent_id = new Guid("b7fcb73a-a8bd-45f3-9b12-18973f90d204"),
                            updated_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da")
                        },
                        new
                        {
                            id = new Guid("43381516-5d9f-476e-8e4b-036b1aedebdf"),
                            active = true,
                            category_description = "Sunglasses",
                            category_name = "Sunglasses",
                            created_at = new DateTime(2024, 4, 2, 11, 49, 55, 142, DateTimeKind.Utc).AddTicks(1656),
                            created_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da"),
                            parent_id = new Guid("f2736214-4f06-46a3-b341-f23040aa4f02"),
                            updated_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da")
                        },
                        new
                        {
                            id = new Guid("62ba1462-f65e-4e5c-a18a-48f81d05ee34"),
                            active = true,
                            category_description = "Lenses",
                            category_name = "Lenses",
                            created_at = new DateTime(2024, 4, 2, 11, 49, 55, 142, DateTimeKind.Utc).AddTicks(1659),
                            created_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da"),
                            parent_id = new Guid("f2736214-4f06-46a3-b341-f23040aa4f02"),
                            updated_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da")
                        },
                        new
                        {
                            id = new Guid("e61048b8-eaeb-42a7-af50-9394a2fee92c"),
                            active = true,
                            category_description = "ShoppingBag",
                            category_name = "Shopping Bag",
                            created_at = new DateTime(2024, 4, 2, 11, 49, 55, 142, DateTimeKind.Utc).AddTicks(1661),
                            created_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da"),
                            parent_id = new Guid("113aa073-f172-496d-8af2-616a029b9710"),
                            updated_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da")
                        },
                        new
                        {
                            id = new Guid("82607616-9f2c-4056-992a-93baa26fc4f1"),
                            active = true,
                            category_description = "GymBackpack",
                            category_name = "Gym Backpack",
                            created_at = new DateTime(2024, 4, 2, 11, 49, 55, 142, DateTimeKind.Utc).AddTicks(1664),
                            created_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da"),
                            parent_id = new Guid("113aa073-f172-496d-8af2-616a029b9710"),
                            updated_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da")
                        });
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Countrie", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("iso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("iso3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("num_code")
                        .HasColumnType("int");

                    b.Property<int>("phone_code")
                        .HasColumnType("int");

                    b.Property<string>("upper_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id")
                        .HasName("PK_COUT_ID");

                    b.ToTable("countries", (string)null);
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Coupon", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("coupon_end_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("coupon_start_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("discount_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("discount_value")
                        .HasColumnType("float");

                    b.Property<double>("max_usage")
                        .HasColumnType("float");

                    b.Property<double>("order_amount_limit")
                        .HasColumnType("float");

                    b.Property<double>("times_used")
                        .HasColumnType("float");

                    b.HasKey("id")
                        .HasName("PK_COUP_ID");

                    b.ToTable("coupons", (string)null);
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Customer", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password_hash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("registered_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("updated_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.HasKey("id")
                        .HasName("PK_CUSTOM_ID");

                    b.ToTable("customers", (string)null);
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Customer_Addresse", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("address_line1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("address_line2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("customer_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("dial_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone_number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("postal_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id")
                        .HasName("PK_CUS1_ID");

                    b.HasIndex("customer_id");

                    b.ToTable("customer_addresses", (string)null);
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Gallery", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("is_thumbnail")
                        .HasColumnType("bit");

                    b.Property<string>("placeholder")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("product_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("updated_at")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("id")
                        .HasName("PK_GAL_ID");

                    b.HasIndex("product_id");

                    b.ToTable("gallery", (string)null);
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Notification", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("account_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("notification_expiry_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("receive_time")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("seen")
                        .HasColumnType("bit");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id")
                        .HasName("PK_NO_ID");

                    b.HasIndex("account_id");

                    b.ToTable("notifications", (string)null);
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Order", b =>
                {
                    b.Property<string>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("coupon_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<Guid>("customer_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("order_approved_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("order_delvered_carrier_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("order_delvered_customer_date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("order_status_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("updated_by")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK_OR_ID");

                    b.HasIndex("coupon_id");

                    b.HasIndex("customer_id");

                    b.HasIndex("order_status_id");

                    b.HasIndex("updated_by");

                    b.ToTable("orders", (string)null);
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Order_Item", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("order_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<Guid>("product_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("id")
                        .HasName("PK_ORIT_ID");

                    b.HasIndex("order_id");

                    b.HasIndex("product_id");

                    b.ToTable("order_items", (string)null);
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Order_Status", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("privacy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("updated_by")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK_ORS_ID");

                    b.HasIndex("created_by");

                    b.HasIndex("updated_by");

                    b.ToTable("order_statuses", (string)null);
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Product", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("buying_price")
                        .HasColumnType("float");

                    b.Property<double>("compare_price")
                        .HasColumnType("float");

                    b.Property<DateTime>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("disable_out_of_stock")
                        .HasColumnType("bit");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("published")
                        .HasColumnType("bit");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<double>("sale_price")
                        .HasColumnType("float");

                    b.Property<string>("short_description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sku")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updated_at")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<Guid>("updated_by")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK_PROD_ID");

                    b.HasIndex("created_by");

                    b.HasIndex("updated_by");

                    b.ToTable("products", (string)null);

                    b.HasData(
                        new
                        {
                            id = new Guid("762e66cc-3dfa-4dff-84ff-4c9b9f38c38d"),
                            buying_price = 48.0,
                            compare_price = 75.0,
                            created_at = new DateTime(2024, 4, 2, 11, 49, 55, 142, DateTimeKind.Utc).AddTicks(6953),
                            created_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da"),
                            disable_out_of_stock = false,
                            note = "Mens Winter Leathers Jackets",
                            product_description = "Mens Winter Leathers Jackets",
                            product_name = "Jacket",
                            product_type = "Clothes",
                            published = true,
                            quantity = 50,
                            sale_price = 15.0,
                            short_description = "Mens Winter Leathers Jackets",
                            sku = "jacket-4.jpg",
                            slug = "jacket-3.jpg",
                            updated_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da")
                        },
                        new
                        {
                            id = new Guid("36663eb2-3b11-43f6-9f1d-4b8e0e99ee96"),
                            buying_price = 45.0,
                            compare_price = 56.0,
                            created_at = new DateTime(2024, 4, 2, 11, 49, 55, 142, DateTimeKind.Utc).AddTicks(6958),
                            created_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da"),
                            disable_out_of_stock = false,
                            note = "Pure Garment Dyed Cotton Shirt",
                            product_description = "Pure Garment Dyed Cotton Shirt",
                            product_name = "Shiet",
                            product_type = "Clothes",
                            published = true,
                            quantity = 50,
                            sale_price = 15.0,
                            short_description = "Pure Garment Dyed Cotton Shirt",
                            sku = "shirt-2.jpg",
                            slug = "shirt-1.jpg",
                            updated_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da")
                        },
                        new
                        {
                            id = new Guid("cd8b0651-8386-4bda-aebe-805e3045d1db"),
                            buying_price = 58.0,
                            compare_price = 65.0,
                            created_at = new DateTime(2024, 4, 2, 11, 49, 55, 142, DateTimeKind.Utc).AddTicks(6969),
                            created_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da"),
                            disable_out_of_stock = false,
                            note = "MEN Yarn Fleece Full-Zip Jacket",
                            product_description = "MEN Yarn Fleece Full-Zip Jacket",
                            product_name = "Jacket",
                            product_type = "Jacket",
                            published = true,
                            quantity = 50,
                            sale_price = 15.0,
                            short_description = "MEN Yarn Fleece Full-Zip Jacket",
                            sku = "jacket-6.jpg",
                            slug = "jacket-5.jpg",
                            updated_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da")
                        },
                        new
                        {
                            id = new Guid("e5346203-9423-401f-b2fc-8a7771f885fd"),
                            buying_price = 25.0,
                            compare_price = 35.0,
                            created_at = new DateTime(2024, 4, 2, 11, 49, 55, 142, DateTimeKind.Utc).AddTicks(6973),
                            created_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da"),
                            disable_out_of_stock = false,
                            note = "Black Floral Wrap Midi Skirt",
                            product_description = "Black Floral Wrap Midi Skirt",
                            product_name = "Shirt",
                            product_type = "Shirt",
                            published = true,
                            quantity = 50,
                            sale_price = 15.0,
                            short_description = "Black Floral Wrap Midi Skirt",
                            sku = "clothes-4.jpg",
                            slug = "clothes-3.jpg",
                            updated_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da")
                        },
                        new
                        {
                            id = new Guid("eb30971d-132d-4c09-be74-3f7c504c1fe1"),
                            buying_price = 25.0,
                            compare_price = 35.0,
                            created_at = new DateTime(2024, 4, 2, 11, 49, 55, 142, DateTimeKind.Utc).AddTicks(6977),
                            created_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da"),
                            disable_out_of_stock = false,
                            note = "Black Floral Wrap Midi Skirt",
                            product_description = "Black Floral Wrap Midi Skirt",
                            product_name = "Shirt",
                            product_type = "Clothes",
                            published = true,
                            quantity = 50,
                            sale_price = 15.0,
                            short_description = "Black Floral Wrap Midi Skirt",
                            sku = "clothes-4.jpg",
                            slug = "clothes-3.jpg",
                            updated_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da")
                        });
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Product_Attribute", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("attribute_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("product_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK_PRA_ID");

                    b.HasIndex("attribute_id");

                    b.HasIndex("product_id");

                    b.ToTable("product_attributes", (string)null);
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Product_Attribute_Value", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("attribute_value_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("product_attribute_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK_PRATRVAL_ID");

                    b.HasIndex("attribute_value_id");

                    b.HasIndex("product_attribute_id");

                    b.ToTable("product_attribute_values", (string)null);
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Product_Category", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("category_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("product_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK_PRCATE_ID");

                    b.HasIndex("category_id");

                    b.HasIndex("product_id");

                    b.ToTable("product_categories", (string)null);
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Product_Coupon", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("coupon_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("product_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK_PRODCOUP_ID");

                    b.HasIndex("coupon_id");

                    b.HasIndex("product_id");

                    b.ToTable("product_coupons", (string)null);
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Product_Shipping_Info", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("dimension_depth")
                        .HasColumnType("float");

                    b.Property<double>("dimension_height")
                        .HasColumnType("float");

                    b.Property<string>("dimension_unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("dimension_width")
                        .HasColumnType("float");

                    b.Property<Guid>("product_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("volume")
                        .HasColumnType("float");

                    b.Property<string>("volume_unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("weight")
                        .HasColumnType("float");

                    b.Property<string>("weight_unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id")
                        .HasName("PK_PROSHPP_ID");

                    b.HasIndex("product_id");

                    b.ToTable("product_shipping_info", (string)null);
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Product_Supplier", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("product_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("supplier_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK_PR_SUP_ID");

                    b.HasIndex("product_id");

                    b.HasIndex("supplier_id");

                    b.ToTable("product_suppliers", (string)null);
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Product_Tag", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("product_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("tag_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK_PR_TAG_ID");

                    b.HasIndex("product_id");

                    b.HasIndex("tag_id");

                    b.ToTable("product_tags", (string)null);
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Role", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("privileges")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("role_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id")
                        .HasName("PK_ROL_ID");

                    b.ToTable("roles", (string)null);

                    b.HasData(
                        new
                        {
                            id = 1,
                            privileges = "AdminPrivileges",
                            role_name = "Admin"
                        },
                        new
                        {
                            id = 2,
                            privileges = "UserPrivileges",
                            role_name = "User"
                        });
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Sell", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<Guid>("product_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("id")
                        .HasName("PK_SELL_ID");

                    b.HasIndex("product_id");

                    b.ToTable("sells", (string)null);
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Shipping_Country_Zone", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("country_id")
                        .HasColumnType("int");

                    b.Property<int>("shipping_zone_id")
                        .HasColumnType("int");

                    b.HasKey("id")
                        .HasName("PK_SHIPPINGCONTRYZONE_ID");

                    b.HasIndex("country_id");

                    b.HasIndex("shipping_zone_id");

                    b.ToTable("shipping_country_zones", (string)null);
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Shipping_Rate", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("max_value")
                        .HasColumnType("float");

                    b.Property<double>("min_value")
                        .HasColumnType("float");

                    b.Property<bool>("no_max")
                        .HasColumnType("bit");

                    b.Property<double?>("price")
                        .HasColumnType("float");

                    b.Property<int>("shipping_zone_id")
                        .HasColumnType("int");

                    b.Property<string>("weight_unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id")
                        .HasName("PK_SHIPR_ID");

                    b.HasIndex("shipping_zone_id");

                    b.ToTable("shipping_rates", (string)null);
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Shipping_Zone", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("display_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("free_shipping")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rate_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updated_at")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<Guid>("updated_by")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK_SHIPPING_ID");

                    b.HasIndex("created_by");

                    b.HasIndex("updated_by");

                    b.ToTable("shipping_zones", (string)null);
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Slideshow", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("btn_label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("clicks")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("destination_url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("display_order")
                        .HasColumnType("int");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("placeholder")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("published")
                        .HasColumnType("bit");

                    b.Property<string>("styles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updated_at")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<Guid>("updated_by")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK_SLID_ID");

                    b.HasIndex("created_by");

                    b.HasIndex("updated_by");

                    b.ToTable("slideshows", (string)null);
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Staff_Account", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password_hash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("placeholder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("registered_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("role_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updated_at")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<Guid>("updated_by")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK_STA_ID");

                    b.HasIndex("created_by");

                    b.HasIndex("role_id");

                    b.HasIndex("updated_by");

                    b.ToTable("staff_accounts", (string)null);

                    b.HasData(
                        new
                        {
                            id = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da"),
                            active = true,
                            created_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da"),
                            email = "vothang@gmail.com",
                            first_name = "Vo",
                            image = "thang.png",
                            last_name = "Thang",
                            password_hash = "123",
                            phone_number = "0923046835",
                            placeholder = "thang",
                            registered_at = new DateTime(2024, 4, 2, 11, 49, 55, 141, DateTimeKind.Utc).AddTicks(2948),
                            role_id = 2,
                            updated_by = new Guid("01ef8064-4f6c-41a1-be27-fb3b026f82da")
                        });
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Supplier", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("address_line1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("address_line2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("city")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("country_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("supplier_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updated_at")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<Guid>("updated_by")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK_SUP_ID");

                    b.HasIndex("created_by");

                    b.HasIndex("updated_by");

                    b.ToTable("suppliers", (string)null);
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Tag", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tag_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updated_at")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<Guid>("updated_by")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK_TAG_ID");

                    b.HasIndex("created_by");

                    b.HasIndex("updated_by");

                    b.ToTable("tags", (string)null);
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Varlant", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("product_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("variant_option")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("variant_option_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK_VAR_ID");

                    b.HasIndex("product_id");

                    b.HasIndex("variant_option_id");

                    b.ToTable("variants", (string)null);
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Varlant_Option", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<double>("buying_price")
                        .HasColumnType("float");

                    b.Property<double>("compare_price")
                        .HasColumnType("float");

                    b.Property<Guid>("image_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("product_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<double>("sale_price")
                        .HasColumnType("float");

                    b.Property<string>("sku")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id")
                        .HasName("PK_VAROP_ID");

                    b.HasIndex("image_id");

                    b.HasIndex("product_id");

                    b.ToTable("variant_options", (string)null);
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Varlant_Value", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("product_attribute_value_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("varlant_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK_VARVL_ID");

                    b.HasIndex("product_attribute_value_id");

                    b.ToTable("variant_values", (string)null);
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Attribute", b =>
                {
                    b.HasOne("vohoangthang.Exercise02.Models.Staff_Account", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("created_by")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("vohoangthang.Exercise02.Models.Staff_Account", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("updated_by")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedBy");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Attribute_Value", b =>
                {
                    b.HasOne("vohoangthang.Exercise02.Models.Attribute", "Attributes")
                        .WithMany()
                        .HasForeignKey("attribute_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Attributes");
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Card", b =>
                {
                    b.HasOne("vohoangthang.Exercise02.Models.Customer", "Customers")
                        .WithMany()
                        .HasForeignKey("customer_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customers");
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Card_Item", b =>
                {
                    b.HasOne("vohoangthang.Exercise02.Models.Card", "Cards")
                        .WithMany()
                        .HasForeignKey("card_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("vohoangthang.Exercise02.Models.Product", "Products")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cards");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Category", b =>
                {
                    b.HasOne("vohoangthang.Exercise02.Models.Staff_Account", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("created_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("vohoangthang.Exercise02.Models.Category", "Parent")
                        .WithMany("InverseParent")
                        .HasForeignKey("parent_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK_PAR_CAT_ID");

                    b.HasOne("vohoangthang.Exercise02.Models.Staff_Account", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("updated_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("Parent");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Customer_Addresse", b =>
                {
                    b.HasOne("vohoangthang.Exercise02.Models.Customer", "Customers")
                        .WithMany()
                        .HasForeignKey("customer_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customers");
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Gallery", b =>
                {
                    b.HasOne("vohoangthang.Exercise02.Models.Product", "Products")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Products");
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Notification", b =>
                {
                    b.HasOne("vohoangthang.Exercise02.Models.Staff_Account", "Staff_Accounts")
                        .WithMany()
                        .HasForeignKey("account_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Staff_Accounts");
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Order", b =>
                {
                    b.HasOne("vohoangthang.Exercise02.Models.Coupon", "Coupons")
                        .WithMany()
                        .HasForeignKey("coupon_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("vohoangthang.Exercise02.Models.Customer", "Customers")
                        .WithMany()
                        .HasForeignKey("customer_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("vohoangthang.Exercise02.Models.Order_Status", "Order_Statuses")
                        .WithMany()
                        .HasForeignKey("order_status_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("vohoangthang.Exercise02.Models.Staff_Account", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("updated_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Coupons");

                    b.Navigation("Customers");

                    b.Navigation("Order_Statuses");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Order_Item", b =>
                {
                    b.HasOne("vohoangthang.Exercise02.Models.Order", "Orders")
                        .WithMany()
                        .HasForeignKey("order_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("vohoangthang.Exercise02.Models.Product", "Products")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Orders");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Order_Status", b =>
                {
                    b.HasOne("vohoangthang.Exercise02.Models.Staff_Account", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("created_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("vohoangthang.Exercise02.Models.Staff_Account", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("updated_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Product", b =>
                {
                    b.HasOne("vohoangthang.Exercise02.Models.Staff_Account", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("created_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("vohoangthang.Exercise02.Models.Staff_Account", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("updated_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Product_Attribute", b =>
                {
                    b.HasOne("vohoangthang.Exercise02.Models.Attribute", "Attributes")
                        .WithMany()
                        .HasForeignKey("attribute_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("vohoangthang.Exercise02.Models.Product", "Products")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Attributes");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Product_Attribute_Value", b =>
                {
                    b.HasOne("vohoangthang.Exercise02.Models.Attribute_Value", "Attribute_Values")
                        .WithMany()
                        .HasForeignKey("attribute_value_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("vohoangthang.Exercise02.Models.Product_Attribute", "Product_Attributes")
                        .WithMany()
                        .HasForeignKey("product_attribute_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Attribute_Values");

                    b.Navigation("Product_Attributes");
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Product_Category", b =>
                {
                    b.HasOne("vohoangthang.Exercise02.Models.Category", "Categories")
                        .WithMany()
                        .HasForeignKey("category_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("vohoangthang.Exercise02.Models.Product", "Products")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categories");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Product_Coupon", b =>
                {
                    b.HasOne("vohoangthang.Exercise02.Models.Coupon", "Coupons")
                        .WithMany()
                        .HasForeignKey("coupon_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("vohoangthang.Exercise02.Models.Product", "Products")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Coupons");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Product_Shipping_Info", b =>
                {
                    b.HasOne("vohoangthang.Exercise02.Models.Product", "Products")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Products");
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Product_Supplier", b =>
                {
                    b.HasOne("vohoangthang.Exercise02.Models.Product", "Products")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("vohoangthang.Exercise02.Models.Supplier", "Suppliers")
                        .WithMany()
                        .HasForeignKey("supplier_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Products");

                    b.Navigation("Suppliers");
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Product_Tag", b =>
                {
                    b.HasOne("vohoangthang.Exercise02.Models.Product", "Products")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("vohoangthang.Exercise02.Models.Tag", "Tags")
                        .WithMany()
                        .HasForeignKey("tag_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Products");

                    b.Navigation("Tags");
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Sell", b =>
                {
                    b.HasOne("vohoangthang.Exercise02.Models.Product", "Products")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Products");
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Shipping_Country_Zone", b =>
                {
                    b.HasOne("vohoangthang.Exercise02.Models.Countrie", "Countries")
                        .WithMany()
                        .HasForeignKey("country_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("vohoangthang.Exercise02.Models.Shipping_Zone", "Shipping_Zones")
                        .WithMany()
                        .HasForeignKey("shipping_zone_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Countries");

                    b.Navigation("Shipping_Zones");
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Shipping_Rate", b =>
                {
                    b.HasOne("vohoangthang.Exercise02.Models.Shipping_Zone", "Shipping_Zones")
                        .WithMany()
                        .HasForeignKey("shipping_zone_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Shipping_Zones");
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Shipping_Zone", b =>
                {
                    b.HasOne("vohoangthang.Exercise02.Models.Staff_Account", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("created_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("vohoangthang.Exercise02.Models.Staff_Account", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("updated_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Slideshow", b =>
                {
                    b.HasOne("vohoangthang.Exercise02.Models.Staff_Account", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("created_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("vohoangthang.Exercise02.Models.Staff_Account", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("updated_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Staff_Account", b =>
                {
                    b.HasOne("vohoangthang.Exercise02.Models.Staff_Account", "Createdbys")
                        .WithMany("InverseCreactedby")
                        .HasForeignKey("created_by")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_CREATEBY");

                    b.HasOne("vohoangthang.Exercise02.Models.Role", "Roles")
                        .WithMany("Staff_Accounts")
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_SA_RL");

                    b.HasOne("vohoangthang.Exercise02.Models.Staff_Account", "Updatedbys")
                        .WithMany("InverseUpdatedBy")
                        .HasForeignKey("updated_by")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_UPDATEBY");

                    b.Navigation("Createdbys");

                    b.Navigation("Roles");

                    b.Navigation("Updatedbys");
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Supplier", b =>
                {
                    b.HasOne("vohoangthang.Exercise02.Models.Staff_Account", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("created_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("vohoangthang.Exercise02.Models.Staff_Account", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("updated_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Tag", b =>
                {
                    b.HasOne("vohoangthang.Exercise02.Models.Staff_Account", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("created_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("vohoangthang.Exercise02.Models.Staff_Account", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("updated_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Varlant", b =>
                {
                    b.HasOne("vohoangthang.Exercise02.Models.Product", "Products")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("vohoangthang.Exercise02.Models.Varlant_Option", "Varlant_Options")
                        .WithMany()
                        .HasForeignKey("variant_option_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Products");

                    b.Navigation("Varlant_Options");
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Varlant_Option", b =>
                {
                    b.HasOne("vohoangthang.Exercise02.Models.Gallery", "Gallerise")
                        .WithMany()
                        .HasForeignKey("image_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("vohoangthang.Exercise02.Models.Product", "Products")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Gallerise");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Varlant_Value", b =>
                {
                    b.HasOne("vohoangthang.Exercise02.Models.Product_Attribute_Value", "Product_Attribute_Values")
                        .WithMany()
                        .HasForeignKey("product_attribute_value_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product_Attribute_Values");
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Category", b =>
                {
                    b.Navigation("InverseParent");
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Role", b =>
                {
                    b.Navigation("Staff_Accounts");
                });

            modelBuilder.Entity("vohoangthang.Exercise02.Models.Staff_Account", b =>
                {
                    b.Navigation("InverseCreactedby");

                    b.Navigation("InverseUpdatedBy");
                });
#pragma warning restore 612, 618
        }
    }
}
